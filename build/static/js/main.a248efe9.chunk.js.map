{"version":3,"sources":["redux/actions/userActions.js","pages/Login/index.js","pages/Dashboard/StyledComponents.js","pages/Dashboard/index.js","App.js","reportWebVitals.js","redux/reducers/userReducer.js","redux/reducers/index.js","index.js"],"names":["setIsLoggedIn","isLoggedIn","type","Login","dispatch","useDispatch","useState","username","setUsername","password","setPassword","onSubmit","e","preventDefault","getState","mockLogin","placeholder","value","onChange","target","required","StyledTableRow","styled","tr","BASE_UNIT_OPTIONS_CONSTANTS","MODAL_OPTIONS_CONSTANTS","WalletInformation","add","user","rate","total","start","earnings","String","Number","map","earning","Dashboard","totalSlp","setTotalSlp","finalResult","setFinalResult","ccToUSD","setCcToUSD","baseUnit","setBaseUnit","baseUnitNumeric","setBaseUnitNumeric","baseUnitRounder","setBaseUnitRounder","modalMode","setModalMode","rowInformation","setRowInformation","modalRef","useRef","useEffect","a","axios","get","data","response","apiData","wallets","managerTotal","coinPrices","console","error","log","renderAddModal","style","display","justifyContent","alignItems","className","maxWidth","marginTop","marginLeft","marginRight","padding","minWidth","borderRadius","onClick","eth","slp","Math","round","role","name","id","autocomplete","checked","for","boxShadow","toUpperCase","textAlign","scope","length","r","i","indexOfInterest","current","click","colSpan","ref","tabIndex","Fragment","earningIndex","App","useSelector","state","to","position","top","width","zIndex","backgroundColor","lineHeight","fontSize","fontWeight","bottom","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","email","userReducer","action","document","cookie","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a248efe9.chunk.js","sourcesContent":["// import axios from 'axios'\r\n\r\n// import { listNotes } from './notesActions'\r\n\r\nexport const setEmail = email => ({ // 1 param = no parentheses\r\n  type: 'SET_EMAIL',\r\n  email,\r\n  // email: email,\r\n})\r\n\r\nexport const setIsLoggedIn = isLoggedIn => ({\r\n  type: 'SET_IS_LOGGED_IN',\r\n  isLoggedIn,\r\n})\r\n\r\nexport const setUsername = username => ({\r\n  type: 'SET_USERNAME',\r\n  username,\r\n})\r\n\r\nexport const mockLogin = (username, password) => (dispatch, getState) => {\r\n  if (username === 'admin' && password === 'axie-manager-admin') {\r\n    return dispatch(setIsLoggedIn(true))\r\n  } else {\r\n    return dispatch(setIsLoggedIn(false))\r\n  }\r\n}\r\n\r\n// export const registerUser = user => (dispatch, getState) => {\r\n//   axios.post(`/api/auth/user/signup`, user, { withCredentials: true })\r\n//     .then(res => {\r\n//       console.log(res)\r\n//       dispatch(setIsLoggedIn(true))\r\n//     })\r\n//     .catch(res => {\r\n//       console.log(res)\r\n//     })\r\n// }\r\n\r\n// export const loginUser = user => (dispatch, getState) => {\r\n//   let cookiePW = user.user.password\r\n  \r\n//   axios.post(`/api/auth/user/login`, user, { withCredentials: true })\r\n//     .then(res => {\r\n//       document.cookie = `email=${res.data.response.user.email}`\r\n//       document.cookie = `password=${cookiePW}`\r\n\r\n//       dispatch(setUsername(res.data.response.user.username))\r\n//       dispatch(setIsLoggedIn(true))\r\n//       return\r\n//     })\r\n//     .then(() => dispatch(listNotes()))\r\n//     .catch(res => {\r\n//       console.log(res)\r\n//     })\r\n// }\r\n\r\n// export const logoutUser = () => (dispatch, getState) => {\r\n//   axios.post(`api/auth/user/logout`, {}, { withCredentials: true })\r\n//     .then(res => {\r\n//       dispatch(setEmail(''))\r\n//       dispatch(setUsername(''))\r\n//       dispatch(setIsLoggedIn(false))\r\n//     })\r\n//     .catch(res => {\r\n//       console.log(res)\r\n//     })\r\n// }\r\n","import React, { useState } from 'react'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { mockLogin } from '../../redux/actions/userActions'\r\n\r\nconst Login = ({}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleUsernameChange = e => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const handlePasswordChange = e => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    dispatch(mockLogin(username, password))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h4>Login</h4>\r\n      <br />\r\n\r\n      <form onSubmit={handleOnSubmit}>\r\n        <input\r\n          placeholder=\"Username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={handleUsernameChange}\r\n          required={true}\r\n        />\r\n        <br />\r\n\r\n        <input\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n          required={true}\r\n        />\r\n        <br />\r\n\r\n        <button type=\"submit\">Log in</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const StyledTableRow = styled.tr`\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background-color: #7aa9f5;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\n// import { useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nimport { StyledTableRow } from './StyledComponents'\r\n\r\nconst BASE_UNIT_OPTIONS_CONSTANTS = {\r\n  SLP: 'slp',\r\n  USD: 'usd',\r\n  ETH: 'eth',\r\n}\r\n\r\nconst MODAL_OPTIONS_CONSTANTS = {\r\n  ADD: 'add',\r\n  DETAILS: 'DETAILS',\r\n}\r\n\r\nconst WalletInformation = ({\r\n  add = '',\r\n  user = '',\r\n  rate = 0,\r\n  total = 0,\r\n  start = 0,\r\n  earnings = []\r\n}) => ({\r\n  add: String(add),\r\n  user: String(user),\r\n  rate: Number(rate),\r\n  total: Number(total),\r\n  start: Number(start),\r\n  earnings: earnings.map(earning => Number(earning))\r\n})\r\n\r\nconst Dashboard = ({}) => {\r\n  // const dispatch = useDispatch()\r\n\r\n  const [totalSlp, setTotalSlp] = useState(0)\r\n  const [finalResult, setFinalResult] = useState([])\r\n  const [ccToUSD, setCcToUSD] = useState({})\r\n\r\n  const [baseUnit, setBaseUnit] = useState(BASE_UNIT_OPTIONS_CONSTANTS.SLP)\r\n  const [baseUnitNumeric, setBaseUnitNumeric] = useState(1)\r\n  const [baseUnitRounder, setBaseUnitRounder] = useState(10)\r\n\r\n  const [modalMode, setModalMode] = useState(MODAL_OPTIONS_CONSTANTS.ADD)\r\n  const [rowInformation, setRowInformation] = useState(WalletInformation({}))\r\n\r\n  const modalRef = useRef()\r\n  \r\n  useEffect(async () => {\r\n    try {\r\n      const apiData = await (await axios.get('/api/daily/fetch')).data.response.data\r\n      const { wallets, managerTotal } = apiData\r\n\r\n      setTotalSlp(managerTotal)\r\n      setFinalResult([ ...wallets ])\r\n\r\n      const coinPrices = await axios.get('/api/coins/all')\r\n\r\n      setCcToUSD({ ...coinPrices.data.response.data })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n\r\n    return () => {}\r\n  }, [])\r\n\r\n  console.log('testingx >>', { modalMode, rowInformation })\r\n\r\n  const renderRowInformationModal = (indexOfInterest) => {\r\n    console.log('testingx >> wtf?')\r\n    setModalMode(MODAL_OPTIONS_CONSTANTS.DETAILS)\r\n    setRowInformation(WalletInformation(finalResult[indexOfInterest]))\r\n    modalRef.current.click()\r\n  }\r\n\r\n  const renderAddModal = () => {\r\n    setModalMode(MODAL_OPTIONS_CONSTANTS.ADD)\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n      <div\r\n        className=\"card\"\r\n        style={{\r\n          maxWidth: 1024,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          marginTop: '5vh',\r\n          marginLeft: 8,\r\n          marginRight: 8,\r\n          padding: 8,\r\n          minWidth: 431,\r\n        }}\r\n      >\r\n        <h4 className=\"mt-2\">\r\n          Dashboard\r\n        </h4>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#staticBackdrop\"\r\n          style={{ borderRadius: '50%' }}\r\n          onClick={renderAddModal}\r\n        >\r\n          +\r\n        </button>\r\n        <br />\r\n\r\n        <div><strong>ETH:</strong> ${ccToUSD.eth}</div>\r\n        <div><strong>SLP:</strong> ${ccToUSD.slp}</div>\r\n        <br />\r\n\r\n        <div>\r\n          <strong>Total (manager):</strong>\r\n          &nbsp;{totalSlp} slp |\r\n          &nbsp;${Math.round(totalSlp * ccToUSD.slp * 100) / 100} |\r\n          &nbsp;{Math.round(totalSlp * ccToUSD.slp / ccToUSD.eth * 100000) / 100000} eth\r\n        </div>\r\n\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Radio toggle for basic unit of table\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"btn-check\"\r\n            name=\"btnradio\"\r\n            id=\"val-slp\"\r\n            autocomplete=\"off\"\r\n            checked={baseUnit === BASE_UNIT_OPTIONS_CONSTANTS.SLP}\r\n            onClick={() => {\r\n              setBaseUnit(BASE_UNIT_OPTIONS_CONSTANTS.SLP)\r\n              setBaseUnitNumeric(1)\r\n              setBaseUnitRounder(10)\r\n            }}\r\n          />\r\n          <label\r\n            className=\"btn btn-outline-primary\" for=\"val-slp\"\r\n            style={{ boxShadow: 'none' }}\r\n          >\r\n            SLP\r\n          </label>\r\n\r\n          <input\r\n            type=\"radio\"\r\n            className=\"btn-check\"\r\n            name=\"btnradio\"\r\n            id=\"val-usd\"\r\n            autocomplete=\"off\"\r\n            checked={baseUnit === BASE_UNIT_OPTIONS_CONSTANTS.USD}\r\n            onClick={() => {\r\n              setBaseUnit(BASE_UNIT_OPTIONS_CONSTANTS.USD)\r\n              setBaseUnitNumeric(ccToUSD.slp)\r\n              setBaseUnitRounder(100)\r\n            }}\r\n          />\r\n          <label\r\n            className=\"btn btn-outline-primary\" for=\"val-usd\"\r\n            style={{ boxShadow: 'none' }}\r\n          >\r\n            USD\r\n          </label>\r\n\r\n          <input\r\n            type=\"radio\"\r\n            className=\"btn-check\"\r\n            name=\"btnradio\"\r\n            id=\"val-eth\"\r\n            autocomplete=\"off\"\r\n            checked={baseUnit === BASE_UNIT_OPTIONS_CONSTANTS.ETH}\r\n            onClick={() => {\r\n              setBaseUnit(BASE_UNIT_OPTIONS_CONSTANTS.ETH)\r\n              setBaseUnitNumeric(ccToUSD.slp / ccToUSD.eth)\r\n              setBaseUnitRounder(10000)\r\n            }}\r\n          />\r\n          <label\r\n            className=\"btn btn-outline-primary\" for=\"val-eth\"\r\n            style={{ boxShadow: 'none' }}\r\n          >\r\n            ETH\r\n          </label>\r\n        </div>\r\n\r\n        <table className=\"table table-striped\">\r\n          <caption>Note: All units are in {baseUnit.toUpperCase()} except for 'Split' column</caption>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ textAlign: 'center' }} scope=\"col\">Name</th>\r\n              <th style={{ textAlign: 'center' }} scope=\"col\">Total</th>\r\n              <th style={{ textAlign: 'center' }} scope=\"col\">Daily</th>\r\n              <th style={{ textAlign: 'center' }} scope=\"col\">Manager</th>\r\n              <th style={{ textAlign: 'center' }} scope=\"col\">Scholar</th>\r\n              <th style={{ textAlign: 'center' }} scope=\"col\">Split</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {finalResult.length ? finalResult.map((r, i) => (\r\n              <StyledTableRow\r\n                key={`row-${i}`}\r\n                onClick={() => renderRowInformationModal(i)}\r\n              >\r\n                <th scope=\"row\"><strong>{r.user}</strong></th>\r\n                <td style={{ textAlign: 'right' }}>\r\n                  {Math.round(r.total * baseUnitNumeric * baseUnitRounder) / baseUnitRounder}\r\n                </td>\r\n                <td style={{ textAlign: 'right' }}>\r\n                  {Math.round((r.total - r.start) * baseUnitNumeric * baseUnitRounder) / baseUnitRounder}\r\n                </td>\r\n                <td style={{ textAlign: 'right' }}>\r\n                  {Math.round((r.total * r.rate) * baseUnitNumeric * baseUnitRounder) / baseUnitRounder}\r\n                </td>\r\n                <td style={{ textAlign: 'right' }}>\r\n                  {Math.round((r.total * (1 - r.rate)) * baseUnitNumeric * baseUnitRounder) / baseUnitRounder}\r\n                </td>\r\n                <td style={{ textAlign: 'center' }}>{r.rate * 100}%</td>\r\n              </StyledTableRow>\r\n            )) : (\r\n              <tr>\r\n                <td colSpan={100} style={{ textAlign: 'center' }}>\r\n                  No Data\r\n                  <br/>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#staticBackdrop\"\r\n                    onClick={renderAddModal}\r\n                  >\r\n                    Add scholar\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n\r\n        <button\r\n          ref={modalRef}\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#staticBackdrop\"\r\n          style={{ display: 'none' }}\r\n        >\r\n          ROW INFORMATION MODAL\r\n        </button>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"staticBackdrop\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          tabIndex=\"-1\"\r\n          aria-labelledby=\"staticBackdropLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5\r\n                  className=\"modal-title\"\r\n                  id=\"staticBackdropLabel\"\r\n                >\r\n                  {console.log('testingx >>', { modalMode })}\r\n                  {modalMode === MODAL_OPTIONS_CONSTANTS.ADD && (\r\n                    <React.Fragment>Add scholar</React.Fragment>\r\n                  )}\r\n\r\n                  {modalMode === MODAL_OPTIONS_CONSTANTS.DETAILS && (\r\n                    <React.Fragment>Information on {rowInformation.user || ''}</React.Fragment>\r\n                  )}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {modalMode === MODAL_OPTIONS_CONSTANTS.ADD && (\r\n                  <React.Fragment>Coming soon...</React.Fragment>\r\n                )}\r\n\r\n                {modalMode === MODAL_OPTIONS_CONSTANTS.DETAILS && (\r\n                  <React.Fragment>\r\n                    <ul>\r\n                      <li>User: {rowInformation.user}</li>\r\n                      <li>Rate: {rowInformation.rate}</li>\r\n                      <li>Total: {rowInformation.total}</li>\r\n                      <li>\r\n                        History: [\r\n                        {rowInformation?.earnings.map((earning, earningIndex) => {\r\n                          return earningIndex === rowInformation.earnings.length - 1 ? earning : `${earning}, `\r\n                        })}\r\n                        ]\r\n                      </li>\r\n                    </ul>\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-bs-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n\r\n                {modalMode === MODAL_OPTIONS_CONSTANTS.ADD && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\nimport './App.css'\n\nimport {\n  Switch,\n  Route,\n  // Link,\n  Redirect,\n} from \"react-router-dom\"\nimport { useSelector } from 'react-redux'\n\nimport Login from './pages/Login'\nimport Dashboard from './pages/Dashboard'\n// import Signup from './pages/Signup'\n\nconst App = ({}) => {\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn)\n\n  return (\n    <div className=\"App\">\n      {!isLoggedIn ? (\n        <Redirect to=\"/login\" />\n      ) : (\n        <Redirect to=\"/dashboard\" />\n      )}\n\n      <div\n        style={{\n          position: 'sticky',\n          top: 0,\n          width: '100%',\n          zIndex: 100,\n          backgroundColor: 'white',\n          padding: '12px 16px',\n          boxShadow: '0 2px 2px -2px gray',\n        }}\n      >\n        <div\n          style={{\n            textAlign: 'center',\n            lineHeight: '1.2',\n            // marginBottom: '.5rem',\n          }}\n        >\n          <div style={{ fontSize: 'calc(1.325rem + .9vw)', fontWeight: 500 }}>\n            Axie Manager\n          </div>\n          <sub style={{ bottom: '0' }}>v-0.0.2</sub>\n        </div>\n      </div>\n\n      <Switch>\n        {/* <Route path=\"/signup\" component={ Signup } /> */}\n        <Route path=\"/login\" component={ Login } />\n        <Route path=\"/dashboard\" component={ Dashboard } />\n        <Route path=\"/\" component={ Dashboard } />\n\n        {/* TODO: add 404 page */}\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  username: '',\r\n  isLoggedIn: true,\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'SET_IS_LOGGED_IN':\r\n      if (!action.isLoggedIn) {\r\n        document.cookie = 'auth=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'\r\n        document.cookie = 'email=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'\r\n        document.cookie = 'password=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'\r\n      }\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLoggedIn,\r\n      };\r\n    case 'SET_EMAIL':\r\n      return {\r\n        ...state,\r\n        email: action.email,\r\n      };\r\n    case 'SET_USERNAME':\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\n// import notesReducer from './notesReducer';\r\nimport user from './userReducer';\r\n\r\nexport default combineReducers({\r\n  // notesReducer,\r\n  user,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}